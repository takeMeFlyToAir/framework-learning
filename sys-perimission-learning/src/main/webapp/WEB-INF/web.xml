<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
  <!-- Spring核心 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <!-- 这个指定了log4j.xml放置的目录 -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  <!-- 一定要加上这个listener -->
  <listener>
    <listener-class>
      org.springframework.web.util.Log4jConfigListener
    </listener-class>
  </listener>
  <!-- 编码处理 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- SpringMVC核心 -->
  <servlet>
    <servlet-name>mybatis</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/mvc-servlet.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>mybatis</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 应用初始化参数 -->
  <servlet>
    <servlet-name>configServlet</servlet-name>
    <servlet-class>com.zzr.sys.permission.common.ConfigServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>


  <filter>
    <filter-name>zzr-sso-filter</filter-name>
    <filter-class>com.zzr.sso.core.filter.ZzrSsoWebFilter</filter-class>
    <init-param>
      <param-name>sso_server</param-name>
      <param-value>http://sso.zzr.com:8089</param-value>
    </init-param>
    <init-param>
      <param-name>SSO_LOGOUT_PATH</param-name>
      <param-value>/logout</param-value>
    </init-param>
    <init-param>
      <param-name>SSO_EXCLUDED_PATHS</param-name>
      <param-value></param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>zzr-sso-filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>